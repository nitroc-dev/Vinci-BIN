openapi: 3.0.3
info:
  title: Gateway
  description: OpenAPI Specification for Compte, Operations, and order
  version: 1.0.0

servers:
  - url: "http://localhost:8080"
    description: Development server

paths:
  /auth:
    post:
      summary: Connect user
      requestBody:
        description: Credentials of the user
        content:
          'application/json':
            schema:
              $ref: '/Groupe01_documentation_service_auth.yaml/#/components/schemas/credentials'
      responses:
        '400':
          description: Invalid
        '401':
          description: Wrong username or password
        '200':
          description: Returned token
          content:
            'application/json':
              schema:
                type: string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhdXRoMCIsInBzZXVkbyI6IkNhdDRMaWZlIn0.LqfooEI-I9VTBo-isjm812ttnIPagMCwdhRkW5ngn0_tlLX86LRoxahgskmgIeWDbm4Mu3y3D8Qbhq_71hNQTA

  /wallets:
    get:
      summary: Reads all wallets
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Returned a list of wallets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "/Groupe01_documentation_service_wallets.yaml/#/components/schemas/wallet"
    post:
      summary: Creates a new Investor wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "/Groupe01_documentation_service_wallets.yaml/#/components/schemas/wallet"
      responses:
        "201":
          description: Wallet created successfully
          content:
            application/json:
              schema:
                $ref: "/Groupe01_documentation_service_wallets.yaml/#/components/schemas/wallet"

  /wallets/{id}:
    parameters:
      - name: id
        in: path
        description: ID of the wallets
        required: true
        schema:
          type: integer
          example: 1
    get:
      security:
        - bearerAuth: [ ]
      summary: Reads one account
      responses:
        "404":
          description: Wallet was not found
        "200":
          description: Returned account
          content:
            application/json:
              schema:
                $ref: "/Groupe01_documentation_service_wallets.yaml/#/components/schemas/wallet"
    patch:
        summary: Partially updates an Investor wallet
        security:
            - bearerAuth: [ ]
        requestBody:
            required: true
            content:
            application/json:
                schema:
                $ref: "/Groupe01_documentation_service_wallets.yaml/#/components/schemas/wallet_to_patch"
        responses:
            "200":
              description: Wallet updated successfully
              content:
                  application/json:
                  schema:
                      $ref: "/Groupe01_documentation_service_wallets.yaml/#/components/schemas/wallet"
            "400":
              description: Bad request
            "404":
              description: Wallet not found
    delete:
      summary: Delete an Investor wallet
      security:
          - bearerAuth: [ ]
      responses:
          "200":
            description: Wallet deleted
            content:
                application/json:
                schema:
                    $ref: "/Groupe01_documentation_service_wallets.yaml/#/components/schemas/wallet"
          "400":
            description: Bad request
          "404":
            description: Wallet not found

  /wallets/{id}/info:
    get:
      summary: Check the info of an Investor wallet
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the account to check
          schema:
            type: integer
      responses:
        "200":
          description: wallet infos retrieved successfully
          content:
            application/json:
              schema:
                $ref: "/Groupe01_documentation_service_wallets.yaml/#/components/schemas/wallet"
        "403":
          description: You don't have the right to access this account

  /wallets/{accountId}/total-value:
    get:
      summary: View the total value of an Investor wallet
      security:
        - bearerAuth: [ ]
      parameters:
        - name: accountId
          in: path
          required: true
          description: ID of the account to check
          schema:
            type: integer

      responses:
        "200":
          description: Total value retrieved successfully
          content:
            application/json:
              schema:
                type: number
        "403":
          description: You don't have the right to access this account

  /orders:
    get:
      summary: Reads all Orders
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Returned a list of Orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "/Groupe01_documentation_service_orders.yaml/#/components/schemas/order"
    post:
      summary: Creates a new Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "/Groupe01_documentation_service_orders.yaml/#/components/schemas/order_to_create"
      responses:
        "400":
          description: Bad request - Unable to create Order
        "201":
          description: returned the newly created Order
          content:
            application/json:
              schema:
                $ref: "/Groupe01_documentation_service_orders.yaml/#/components/schemas/order"

  /orders/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the Order
        schema:
          type: integer
          example: 1
    get:
      summary: Reads one Order
      security:
        - bearerAuth: [ ]
      responses:
        "404":
          description: Order was not found
        "200":
          description: Returned Order
          content:
            application/json:
              schema:
                $ref: "/Groupe01_documentation_service_orders.yaml/#/components/schemas/order"
    patch:
      summary: Modify order
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
             $ref: "/Groupe01_documentation_service_orders.yaml/#/components/schemas/order_to_patch"
      responses:
        "200":
          description: Modification succeded
          content:
            application/json:
              schema:
                $ref: "/Groupe01_documentation_service_orders.yaml/#/components/schemas/order"
        "400":
          description: Bad request
        "404":
          description: Order not found
    delete:
      summary: Delete order
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Order deleted
          content:
            application/json:
              schema:
                $ref: "/Groupe01_documentation_service_orders.yaml/#/components/schemas/order"
        "400":
          description: Bad request
        "404":
          description: Order not found

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT